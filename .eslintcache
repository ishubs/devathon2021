[{"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\index.js":"1","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\App.js":"2","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\serviceWorker.js":"3","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\app\\store.js":"4","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\firebase.js":"5","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Quora.js":"6","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\features\\userSlice.js":"7","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\auth\\Login.js":"8","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\features\\questionSlice.js":"9","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Widget.js":"10","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Feed.js":"11","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\QHeader.js":"12","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Sidebar.js":"13","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\WidgetContent.js":"14","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\QuorBox.js":"15","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Post.js":"16","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\SidebarOptions.js":"17","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Section.js":"18","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\ProjectFeed.js":"19","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\profile.js":"20","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Channel.js":"21","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Message.js":"22","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\StudentProfile.js":"23","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\constants.js":"24"},{"size":757,"mtime":1631960553219,"results":"25","hashOfConfig":"26"},{"size":1454,"mtime":1631999307026,"results":"27","hashOfConfig":"26"},{"size":5141,"mtime":1631900790499,"results":"28","hashOfConfig":"26"},{"size":276,"mtime":1631900790462,"results":"29","hashOfConfig":"26"},{"size":1035,"mtime":1631908589316,"results":"30","hashOfConfig":"26"},{"size":678,"mtime":1631969012335,"results":"31","hashOfConfig":"26"},{"size":462,"mtime":1631900790492,"results":"32","hashOfConfig":"26"},{"size":5138,"mtime":1631986999235,"results":"33","hashOfConfig":"26"},{"size":626,"mtime":1631900790492,"results":"34","hashOfConfig":"26"},{"size":1266,"mtime":1631962492197,"results":"35","hashOfConfig":"26"},{"size":1082,"mtime":1631983772770,"results":"36","hashOfConfig":"26"},{"size":7751,"mtime":1631983189783,"results":"37","hashOfConfig":"26"},{"size":242,"mtime":1631900790482,"results":"38","hashOfConfig":"26"},{"size":643,"mtime":1631965459791,"results":"39","hashOfConfig":"26"},{"size":945,"mtime":1631963452224,"results":"40","hashOfConfig":"26"},{"size":7056,"mtime":1631991408552,"results":"41","hashOfConfig":"26"},{"size":2643,"mtime":1631900790482,"results":"42","hashOfConfig":"26"},{"size":475,"mtime":1631968650480,"results":"43","hashOfConfig":"26"},{"size":1083,"mtime":1631983792034,"results":"44","hashOfConfig":"26"},{"size":891,"mtime":1631994579905,"results":"45","hashOfConfig":"26"},{"size":4154,"mtime":1631998052144,"results":"46","hashOfConfig":"26"},{"size":1373,"mtime":1631988828287,"results":"47","hashOfConfig":"26"},{"size":824,"mtime":1631996032176,"results":"48","hashOfConfig":"26"},{"size":28,"mtime":1631996094489,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"1h08rk",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"90","usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\index.js",["110","111"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n      <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n",["112","113"],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\App.js",["114","115","116"],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\serviceWorker.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\app\\store.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\firebase.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Quora.js",["117"],"import React, { useState } from \"react\";\r\nimport Feed from \"./Feed.js\";\r\nimport QHeader from \"./QHeader\";\r\nimport \"./Quora.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Widget from \"./Widget.js\";\r\nimport Section from \"./Section.js\";\r\nimport ProjectFeed from \"./ProjectFeed.js\";\r\n\r\nfunction Quora() {\r\n  const [field, setfield] = useState(\"questions\")\r\n  return (\r\n    <div className=\"quora\">\r\n      <QHeader field={ field} />\r\n      <Section field={field} setfield={setfield}/>\r\n      <div className=\"quora__content\">\r\n        <Sidebar />\r\n        {field==\"questions\" ? <Feed />:<ProjectFeed/>}\r\n        <Widget />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quora;\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\features\\userSlice.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\auth\\Login.js",["118","119"],"import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport db, { auth, provider } from \"../../firebase\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [LorR, setLorR] = useState(false);\r\n  const [role, setrole] = useState(\"student\");\r\n  const [dept, setdept] = useState(\"Computer Science\");\r\n  const [name, setname] = useState(\"\")\r\n  const signIn = () => {\r\n    auth.signInWithPopup(provider).catch((e) => {\r\n      alert(e.message);\r\n    });\r\n  };\r\n\r\n  const handleSignIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        console.log(auth);\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n\r\n  const registerSignIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n     \r\n           auth.user.updateProfile({\r\n            displayName: name\r\n          })\r\n       \r\n        if (auth) {\r\n          // console.log(role);\r\n          console.log(auth.user.displayName);\r\n         \r\n          const map = {\r\n            \r\n            \r\n            email: email,\r\n            photourl: auth.user.photoURL,\r\n            department: dept\r\n          };\r\n          db.collection(role).add(map);\r\n        }\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n  const logincomponent = (\r\n    <div className=\"login__emailPass\">\r\n      <div className=\"login__inputFields\">\r\n        <div className=\"login__inputField\">\r\n          <input\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </div>\r\n        <div className=\"login__inputField\">\r\n          <input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"login__forgButt\">\r\n        <small>Forgot Password?</small>\r\n        <button onClick={handleSignIn}>Login</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const registercomponent = (\r\n    <div className=\"login__emailPass\">\r\n      <div className=\"login__inputFields\">\r\n      <div className=\"login__inputField\">\r\n          <input\r\n            value={name}\r\n            onChange={(e) => setname(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n          />\r\n        </div>\r\n        <div className=\"login__inputField\">\r\n          <input\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </div>\r\n        <div className=\"login__inputField\">\r\n          <input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </div>\r\n        <div className=\"login__inputField\">\r\n          <select\r\n            value={role}\r\n            onChange={(e) => {\r\n              setrole(e.target.value);\r\n            }}\r\n          >\r\n            <option disabled selected>\r\n              role\r\n            </option>\r\n            <option value=\"student\">Student</option>\r\n            <option value=\"faculty\">Faculty</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"login__inputField\">\r\n        <select\r\n            value={dept}\r\n            onChange={(e) => {\r\n              setdept(e.target.value);\r\n            }}\r\n          >\r\n            <option disabled selected>\r\n              department\r\n            </option>\r\n            <option value=\"Computer Science\">Computer Science</option>\r\n            <option value=\"Mechanical\">Mechanical</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <button onClick={registerSignIn}>Register</button>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <div className=\"login__logo\">\r\n          <img src=\"logo.png\" alt=\"\" />\r\n        </div>\r\n        <div className=\"login__desc\">\r\n          <p>A Place for students and professors</p>\r\n          {/* <p style={{ color: \"royalblue\", fontSize: \"25px\" }}>\r\n            HandCrafted with ❤️ by{\" \"}\r\n          </p> */}\r\n        </div>\r\n        <div className=\"login__auth\">\r\n          <div className=\"login__label\">\r\n            <button style={LorR?{}:{background:\"#189AB4\",color:\"white\"}}\r\n              onClick={() => {\r\n                setLorR(false);\r\n              }}\r\n            >\r\n              Login\r\n            </button>\r\n            <button style={LorR ? { background: \"#189AB4\", color:\"white\" }: {} }\r\n              onClick={() => {\r\n                setLorR(true);\r\n              }}\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n          {LorR ? registercomponent : logincomponent}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\features\\questionSlice.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Widget.js",["120","121"],"import React, {useEffect, useState} from \"react\";\r\nimport \"./Widget.css\";\r\nimport WidgetContent from \"./WidgetContent\";\r\nimport db, { auth, provider } from \"../firebase\";\r\nfunction Widget() {\r\nconst [faculty, setfaculty] = useState([])\r\n  // useEffect(() => {\r\n  //   db.collection(\"faculty\")\r\n  //     .onSnapshot((snapshot) =>\r\n  //       console.log(snapshot.doc.data())\r\n  //       // setPosts(\r\n  //       //   snapshot.map((doc) => ({\r\n  //       //     id: doc.id,\r\n  //       //     questions: doc.data(),\r\n  //       //   }))\r\n  //       // )\r\n  //     );\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"faculty\")\r\n      .onSnapshot((snapshot) =>{\r\n          setfaculty(snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            email: doc.data().email,\r\n            photourl: doc.data().photourl == null? \"\": doc.data().photourl,\r\n          })))\r\n        }\r\n       \r\n      );\r\n  }, []);\r\n  return (\r\n    <div className=\"widget\">\r\n      <div className=\"widget__header\">\r\n        <h5>Faculty</h5>\r\n      </div>\r\n      <div className=\"widget__contents\">\r\n        {/* <WidgetContent /> */}\r\n        {faculty.map(i => (\r\n          <WidgetContent user={i} />\r\n        )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Widget;\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Feed.js",["122"],"import React, { useEffect, useState } from \"react\";\r\nimport QuorBox from \"./QuorBox\";\r\nimport \"./Feed.css\";\r\nimport Post from \"./Post\";\r\nimport db from \"../firebase\";\r\n\r\nfunction Feed() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"questions\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            questions: doc.data(),\r\n          }))\r\n        )\r\n      );\r\n  }, []);\r\n\r\n  console.log(posts)\r\n  return (\r\n    <div className=\"feed\">\r\n      <QuorBox field={\"feed\"}/>\r\n      {posts.map(({ id, questions }) => (\r\n        <Post\r\n          key={id}\r\n          Id={id}\r\n          question={questions.question}\r\n          imageUrl={questions.imageUrl}\r\n          timestamp={questions.timestamp}\r\n          users={questions.user}\r\n          file={questions.file == undefined ? \"\" : questions.file}\r\n          upvote={questions.upvote}\r\n          field={\"questions\"}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\QHeader.js",["123","124","125","126","127","128","129"],"import React, { useState } from \"react\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport FeaturedPlayListOutlinedIcon from \"@material-ui/icons/FeaturedPlayListOutlined\";\r\nimport AssignmentTurnedInOutlinedIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\r\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\r\nimport NotificationsOutlinedIcon from \"@material-ui/icons/NotificationsOutlined\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"./QHeader.css\";\r\nimport { Avatar, Button, Input } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport db, { auth, storage } from \"../firebase\";\r\nimport { ExpandMore, Link } from \"@material-ui/icons\";\r\nimport firebase from \"firebase\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction QHeader({field}) {\r\n  const user = useSelector(selectUser);\r\n  const allInputs = {imgUrl: ''}\r\n  // const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  // const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n  const [inputUrl, setInputUrl] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [url, setURL] = useState(\"\")\r\n  // const [fileHolder, setfileHolder] = useState(\"\");\r\n  // const [uploading, setuploading] = useState(false)\r\n  const questionName = input;\r\n\r\n  const handleQuestion = (e) => {\r\n    e.preventDefault();\r\n    setIsModalOpen(false);\r\n    if (questionName) {\r\n      db.collection(field).add({\r\n        user: user,\r\n        question: input,\r\n        imageUrl: inputUrl,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      //  file: storage.ref(`/files/${fileHolder.name}`).put(fileHolder)\r\n        file: url,\r\n        upvote:[]\r\n      });\r\n    }\r\n  };\r\n\r\n// // console.log(imageAsFile)\r\n//   const handleImageAsFile = (e) => {\r\n//     const image = e.target.files[0]\r\n//     setImageAsFile(imageFile => (image))\r\n// }\r\n  \r\n// function handleChange(e) {\r\n//   setFile(e.target.files[0]);\r\n// }\r\nconsole.log(url)\r\nasync function handleFireBaseUpload(e) {\r\n  e.preventDefault();\r\n  let file = e.target.files[0]\r\n  console.log(file.name)\r\n  const ref = storage.ref(`/files/${file.name}`);\r\n  const uploadTask = ref.put(file);\r\n  uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n    ref\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        setFile(null);\r\n        setURL(url);\r\n      });\r\n  });\r\n}\r\n  \r\n  // const handleFireBaseUpload = async (e) => {\r\n    \r\n  // console.log('start of upload')\r\n  // // async magic goes here...\r\n  // if(imageAsFile === '') {\r\n  //   console.error(`not an image, the image file is a ${typeof(file)}`)\r\n  //   }\r\n    \r\n  // const uploadTask = storage.ref(`/files/${imageAsFile.name}`).put(imageAsFile)\r\n  // //initiates the firebase side uploading \r\n  // uploadTask.on('state_changed', \r\n  // (snapShot) => {\r\n  //   //takes a snap shot of the process as it is happening\r\n  //   console.log(snapShot)\r\n  // }, (err) => {\r\n  //   //catches the errors\r\n  //   console.log(err)\r\n  // }, () => {\r\n  //   // gets the functions from storage refences the image storage in firebase by the children\r\n  //   // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n  //   storage.ref('files').child(imageAsFile.name).getDownloadURL()\r\n  //    .then(fireBaseUrl => {\r\n  //      setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\r\n  //    })\r\n  //   console.log(imageAsUrl.imgUrl)\r\n  // })\r\n  // }\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"qHeader\">\r\n      <div className=\"qHeader__logo\">\r\n        <img\r\n          src=\"logo.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"qHeader__icons\">\r\n        <div className=\"active qHeader__icon\">\r\n          <HomeIcon />\r\n        </div>\r\n        {/* <div className=\"qHeader__icon\">\r\n          <FeaturedPlayListOutlinedIcon />\r\n        </div>\r\n        <div className=\"qHeader__icon\">\r\n          <AssignmentTurnedInOutlinedIcon />\r\n        </div>\r\n        <div className=\"qHeader__icon\">\r\n          <PeopleAltOutlinedIcon />\r\n        </div>\r\n        <div className=\"qHeader__icon\">\r\n          <NotificationsOutlinedIcon />\r\n        </div> */}\r\n      </div>\r\n      <div className=\"qHeader__input\">\r\n        <SearchIcon />\r\n        <input type=\"text\" placeholder=\"Search Discussly\" />\r\n      </div>\r\n      <div className=\"qHeader__Rem\">\r\n        <div className=\"qHeader__avatar\">\r\n          <Avatar\r\n            onClick={() => auth.signOut()}\r\n            className=\"Avatar\"\r\n            src={\r\n              user.photo\r\n                ? user.photo\r\n                : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\r\n            }\r\n          />\r\n        </div>\r\n        <LanguageIcon />\r\n        <Button onClick={() => setIsModalOpen(true)}>{field==\"questions\" ? \"Ask Question\": \"Add Project\"}</Button>\r\n        <Modal\r\n          isOpen={IsmodalOpen}\r\n          onRequestClose={() => setIsModalOpen(false)}\r\n          shouldCloseOnOverlayClick={false}\r\n          style={{\r\n            overlay: {\r\n              width: 700,\r\n              height: 600,\r\n              backgroundColor: \"rgba(0,0,0,0.8)\",\r\n              zIndex: \"1000\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              marginTop: \"-300px\",\r\n              marginLeft: \"-350px\",\r\n            },\r\n          }}\r\n        >\r\n          <div className=\"modal__title\">\r\n            <h5>Add Question</h5>\r\n            <h5>Share Link</h5>\r\n          </div>\r\n          <div className=\"modal__info\">\r\n            <Avatar\r\n              className=\"avatar\"\r\n              src={\r\n                user.photo\r\n                  ? user.photo\r\n                  : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\r\n              }\r\n            />\r\n            <p>{user.disPlayName ? user.disPlayName : user.email} asked</p>\r\n            <div className=\"modal__scope\">\r\n              <PeopleAltOutlinedIcon />\r\n              <p>Public</p>\r\n              <ExpandMore />\r\n            </div>\r\n          </div>\r\n          <div className=\"modal__Field\">\r\n            <Input\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Start your question with 'What', 'How', 'Why', etc. \"\r\n            />\r\n            <div className=\"modal__fieldLink\">\r\n              <Link />\r\n              <input\r\n                value={inputUrl}\r\n                onChange={(e) => setInputUrl(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Optional: inclue a link that gives context\"\r\n              ></input>\r\n            </div>\r\n            <div className=\"modal__fieldLink\">\r\n              <Link />\r\n              <input type=\"file\" onChange={\r\n                handleFireBaseUpload\r\n              }></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal__buttons\">\r\n            <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\r\n              Cancel\r\n            </button>\r\n            <button type=\"sumbit\" onClick={(e) => (handleQuestion(e)) } className=\"add\" >\r\n              {field==\"questions\" ? \"Add Question\": \"Add a Project\"}\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QHeader;\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Sidebar.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\WidgetContent.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\QuorBox.js",["130"],"import { Avatar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport \"./QuoraBox.css\";\r\n\r\nexport default function QuorBox({field}) {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <div className=\"quoraBox\">\r\n      <div className=\"quoraBox__info\">\r\n        <Avatar\r\n          src={\r\n            user.photo\r\n              ? user.photo\r\n              : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\r\n          }\r\n          className=\"quoraBox__infoAvatar\"\r\n        />\r\n        <h5>{user.displayName ? user.displayName : user.email}</h5>\r\n      </div>\r\n      <div className=\"quoraBox__quora\">\r\n        <p>{(field==\"project\")? \"Post Your Project Here\":\"Ask a Question\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Post.js",["131","132","133","134","135","136","137","138"],"import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Post.css\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\r\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\r\nimport { MoreHorizOutlined, ShareOutlined, Update } from \"@material-ui/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport Modal from \"react-modal\";\r\nimport db from \"../firebase\";\r\nimport { selectQuestionId, setQuestionInfo } from \"../features/questionSlice\";\r\nimport firebase from \"firebase\";\r\nimport { Link } from \"react-router-dom\"\r\nfunction Post({ Id, question, imageUrl, timestamp, users, file, upvote, field}) {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n// console.log(file)\r\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\r\n  const questionId = useSelector(selectQuestionId);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [getAnswers, setGetAnswers] = useState([]);\r\n \r\n  useEffect(() => {\r\n    if (questionId) {\r\n      db.collection(field)\r\n        .doc(questionId)\r\n        .collection(\"answer\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) =>\r\n          setGetAnswers(\r\n            snapshot.docs.map((doc) => ({ id: doc.id, answers: doc.data() }))\r\n          )\r\n        );\r\n    }\r\n  }, [questionId]);\r\n\r\n\r\n  const handleupvote = (e) => {\r\n    e.preventDefault();\r\n    if (questionId) {\r\n      db.collection(field).doc(questionId).update({\r\n        upvote: firebase.firestore.FieldValue.arrayUnion(user)\r\n      }\r\n      )\r\n    }\r\n\r\n    // db.collection(\"questions\").doc(questionId).collection(\"upvote\").doc(user).delete({\r\n    //   user: user,\r\n    //   upvote: true,\r\n    //   questionId: questionId,\r\n    //   timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    // });\r\n\r\n    // console.log(questionId);\r\n    // setAnswer(\"\");\r\n    // setIsModalOpen(false);\r\n  };\r\n\r\n  const handleAnswer = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (questionId) {\r\n      db.collection(field).doc(questionId).collection(\"answer\").add({\r\n        user: user,\r\n        answer: answer,\r\n        questionId: questionId,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n    }\r\n    console.log(questionId);\r\n    setAnswer(\"\");\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"post\"\r\n      onClick={() =>\r\n        dispatch(\r\n          setQuestionInfo({\r\n            questionId: Id,\r\n            questionName: question,\r\n          })\r\n        )\r\n      }\r\n    >\r\n      <div className=\"post__info\">\r\n        <Avatar\r\n          src={\r\n            users.photo\r\n              ? users.photo\r\n              : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\r\n          }\r\n        />\r\n         <Link to={`profile/student/`+users.email}><h4>{users.displayName ? users.displayName : users.email}</h4></Link>\r\n        <small>{new Date(timestamp?.toDate()).toLocaleString()}</small>\r\n      </div>\r\n      <div className=\"post__body\">\r\n        <div className=\"post__question\">\r\n          <h3>{question}</h3>\r\n          <button\r\n            onClick={() => setIsModalOpen(true)}\r\n            className=\"post__btnAnswer\"\r\n          >\r\n            Answer\r\n          </button>\r\n          <Modal\r\n            isOpen={IsmodalOpen}\r\n            onRequestClose={() => setIsModalOpen(false)}\r\n            shouldCloseOnOverlayClick={false}\r\n            style={{\r\n              overlay: {\r\n                width: 680,\r\n                height: 550,\r\n                backgroundColor: \"rgba(0,0,0,0.8)\",\r\n                zIndex: \"1000\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                marginTop: \"-250px\",\r\n                marginLeft: \"-350px\",\r\n              },\r\n            }}\r\n          >\r\n            <div className=\"modal__question\">\r\n              <h1>{question}</h1>\r\n              <p>\r\n                asked by{\" \"}\r\n                <span className=\"name\">\r\n                  {users.displayName ? users.displayName : users.email}\r\n                </span>{\" \"}\r\n                {\"\"}\r\n                on{\" \"}\r\n                <span className=\"name\">\r\n                  {new Date(timestamp?.toDate()).toLocaleString()}\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"modal__answer\">\r\n              <textarea\r\n                value={answer}\r\n                onChange={(e) => setAnswer(e.target.value)}\r\n                placeholder=\"Enter Your Answer\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"modal__button\">\r\n              <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\r\n                Cancel\r\n              </button>\r\n              <button type=\"sumbit\" onClick={handleAnswer} className=\"add\">\r\n                Add Answer\r\n              </button>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <div><a target=\"_blank\" href={file} >{ field==\"questions\"? \"File\":\"Project File\"}</a></div>\r\n        <div className=\"post__answer\">\r\n          {getAnswers.map(({ id, answers }) => (\r\n            <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" , border:\"black\"}}>\r\n              {Id === answers.questionId ? (\r\n                <span>\r\n                  {answers.answer}\r\n                  <br />\r\n                  <span\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      color: \"gray\",\r\n                      fontSize: \"small\",\r\n                      display: \"flex\",\r\n                      right: \"0px\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#b92b27\" }}>\r\n                      {answers.user.displayName\r\n                        ? answers.user.displayName\r\n                        : answers.user.name}{\" \"}\r\n                      on{\" \"}\r\n                      {new Date(answers.timestamp?.toDate()).toLocaleString()}\r\n                    </span>\r\n                  </span>\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <img src={imageUrl} alt=\"\" />\r\n      </div>\r\n      <div className=\"post__footer\">\r\n        <div className=\"post__footerAction\">\r\n          <ArrowUpwardOutlinedIcon onClick={(e)=>handleupvote(e)} />{upvote==undefined? 0: upvote.length}\r\n        </div>\r\n\r\n        {/* <RepeatOutlinedIcon />\r\n        <ChatBubbleOutlineOutlinedIcon /> */}\r\n        <div className=\"post__footerLeft\">\r\n          <ShareOutlined />\r\n          <MoreHorizOutlined />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\SidebarOptions.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Section.js",["139","140","141","142","143"],"import React from \"react\";\r\nimport Feed from \"./Feed.js\";\r\nimport QHeader from \"./QHeader\";\r\nimport \"./Quora.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Widget from \"./Widget.js\";\r\nimport Section from \"./Section.js\";\r\n\r\nfunction Quora({setfield,field}) {\r\n  return (\r\n    <div>\r\n          <button onClick={()=>setfield(\"projects\")}>Projects</button>\r\n          <button onClick={()=>setfield(\"questions\")}>Questions</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quora;\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\ProjectFeed.js",["144"],"import React, { useEffect, useState } from \"react\";\r\nimport QuorBox from \"./QuorBox\";\r\nimport \"./Feed.css\";\r\nimport Post from \"./Post\";\r\nimport db from \"../firebase\";\r\n\r\nfunction Feed() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"projects\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            questions: doc.data(),\r\n          }))\r\n        )\r\n      );\r\n  }, []);\r\n\r\n  console.log(posts)\r\n  return (\r\n    <div className=\"feed\">\r\n          <QuorBox field={\"project\"}/>\r\n      {posts.map(({ id, questions }) => (\r\n        <Post\r\n          key={id}\r\n          Id={id}\r\n          question={questions.question}\r\n          imageUrl={questions.imageUrl}\r\n          timestamp={questions.timestamp}\r\n          users={questions.user}\r\n        file={questions.file == undefined ? \"\" : questions.file}\r\n        field={\"projects\"}\r\n          upvote={questions.upvote}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\profile.js",["145","146"],"import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\"\r\nimport db from \"../firebase\";\r\nimport Channel from \"./Channel\";\r\nfunction Profile() {\r\n    let { id } = useParams()\r\n    console.log(\"this is id\" + id)\r\n    const [user, setuser] = useState({})\r\n    const email1 = user.email\r\n    useEffect(() => {\r\n       \r\n            db.collection(\"faculty\").where('email', '==', id).get()\r\n              .then((querySnapshot) => {\r\n                     \r\n              querySnapshot.forEach(element => {\r\n                  var data = element.data();\r\n                  console.log(data)\r\n                  setuser(data)\r\n                    \r\n              });\r\n          })\r\n          \r\n    },[])\r\n\r\n    \r\n    return (\r\n        <div><h1 className=\"App\">{id}</h1>\r\n            <Channel email1={ id}/>\r\n        </div>\r\n    );\r\n    \r\n}\r\nexport default Profile\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Channel.js",["147","148","149","150"],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Message.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\StudentProfile.js",["151","152"],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\constants.js",[],{"ruleId":"153","severity":1,"message":"154","line":5,"column":25,"nodeType":"155","messageId":"156","endLine":5,"endColumn":30},{"ruleId":"153","severity":1,"message":"157","line":5,"column":32,"nodeType":"155","messageId":"156","endLine":5,"endColumn":38},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"153","severity":1,"message":"162","line":9,"column":10,"nodeType":"155","messageId":"156","endLine":9,"endColumn":23},{"ruleId":"153","severity":1,"message":"157","line":9,"column":32,"nodeType":"155","messageId":"156","endLine":9,"endColumn":38},{"ruleId":"163","severity":1,"message":"164","line":32,"column":6,"nodeType":"165","endLine":32,"endColumn":16,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":18,"column":15,"nodeType":"169","messageId":"170","endLine":18,"endColumn":17},{"ruleId":"153","severity":1,"message":"171","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":27},{"ruleId":"153","severity":1,"message":"172","line":13,"column":9,"nodeType":"155","messageId":"156","endLine":13,"endColumn":15},{"ruleId":"153","severity":1,"message":"173","line":4,"column":14,"nodeType":"155","messageId":"156","endLine":4,"endColumn":18},{"ruleId":"153","severity":1,"message":"174","line":4,"column":20,"nodeType":"155","messageId":"156","endLine":4,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":35,"column":32,"nodeType":"169","messageId":"170","endLine":35,"endColumn":34},{"ruleId":"153","severity":1,"message":"175","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":36},{"ruleId":"153","severity":1,"message":"176","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":38},{"ruleId":"153","severity":1,"message":"177","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":33},{"ruleId":"153","severity":1,"message":"178","line":23,"column":9,"nodeType":"155","messageId":"156","endLine":23,"endColumn":18},{"ruleId":"153","severity":1,"message":"179","line":29,"column":10,"nodeType":"155","messageId":"156","endLine":29,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":150,"column":60,"nodeType":"169","messageId":"170","endLine":150,"endColumn":62},{"ruleId":"167","severity":1,"message":"168","line":216,"column":21,"nodeType":"169","messageId":"170","endLine":216,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":24,"column":19,"nodeType":"169","messageId":"170","endLine":24,"endColumn":21},{"ruleId":"153","severity":1,"message":"180","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":33},{"ruleId":"153","severity":1,"message":"181","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":26},{"ruleId":"153","severity":1,"message":"182","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":37},{"ruleId":"153","severity":1,"message":"183","line":8,"column":44,"nodeType":"155","messageId":"156","endLine":8,"endColumn":50},{"ruleId":"163","severity":1,"message":"184","line":37,"column":6,"nodeType":"165","endLine":37,"endColumn":18,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":157,"column":14,"nodeType":"188","messageId":"189","endLine":157,"endColumn":46,"fix":"190"},{"ruleId":"167","severity":1,"message":"168","line":157,"column":53,"nodeType":"169","messageId":"170","endLine":157,"endColumn":55},{"ruleId":"167","severity":1,"message":"168","line":193,"column":76,"nodeType":"169","messageId":"170","endLine":193,"endColumn":78},{"ruleId":"153","severity":1,"message":"191","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":12},{"ruleId":"153","severity":1,"message":"192","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":15},{"ruleId":"153","severity":1,"message":"193","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":15},{"ruleId":"153","severity":1,"message":"194","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":14},{"ruleId":"153","severity":1,"message":"195","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":35,"column":30,"nodeType":"169","messageId":"170","endLine":35,"endColumn":32},{"ruleId":"153","severity":1,"message":"196","line":9,"column":11,"nodeType":"155","messageId":"156","endLine":9,"endColumn":17},{"ruleId":"163","severity":1,"message":"197","line":23,"column":7,"nodeType":"165","endLine":23,"endColumn":9,"suggestions":"198"},{"ruleId":"153","severity":1,"message":"199","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":17},{"ruleId":"153","severity":1,"message":"200","line":13,"column":10,"nodeType":"155","messageId":"156","endLine":13,"endColumn":14},{"ruleId":"153","severity":1,"message":"201","line":13,"column":16,"nodeType":"155","messageId":"156","endLine":13,"endColumn":23},{"ruleId":"163","severity":1,"message":"202","line":55,"column":6,"nodeType":"165","endLine":55,"endColumn":8,"suggestions":"203"},{"ruleId":"153","severity":1,"message":"204","line":7,"column":12,"nodeType":"155","messageId":"156","endLine":7,"endColumn":16},{"ruleId":"163","severity":1,"message":"197","line":21,"column":7,"nodeType":"165","endLine":21,"endColumn":9,"suggestions":"205"},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["206"],"no-negated-in-lhs",["207"],"'BrowserRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.","ArrayExpression",["208"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ArrowForwardIosIcon' is defined but never used.","'signIn' is assigned a value but never used.","'auth' is defined but never used.","'provider' is defined but never used.","'FeaturedPlayListOutlinedIcon' is defined but never used.","'AssignmentTurnedInOutlinedIcon' is defined but never used.","'NotificationsOutlinedIcon' is defined but never used.","'allInputs' is assigned a value but never used.","'file' is assigned a value but never used.","'ArrowDownwardOutlinedIcon' is defined but never used.","'RepeatOutlinedIcon' is defined but never used.","'ChatBubbleOutlineOutlinedIcon' is defined but never used.","'Update' is defined but never used.","React Hook useEffect has a missing dependency: 'field'. Either include it or remove the dependency array.",["209"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"210","text":"211"},"'Feed' is defined but never used.","'QHeader' is defined but never used.","'Sidebar' is defined but never used.","'Widget' is defined but never used.","'Section' is defined but never used.","'email1' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["212"],"'userSlice' is defined but never used.","'docs' is assigned a value but never used.","'setDocs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["213"],"'user' is assigned a value but never used.",["214"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},[5342,5342]," rel=\"noreferrer\"",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"219","fix":"223"},"Update the dependencies array to be: [dispatch, user.email]",{"range":"224","text":"225"},"Update the dependencies array to be: [field, questionId]",{"range":"226","text":"227"},"Update the dependencies array to be: [id]",{"range":"228","text":"229"},"Update the dependencies array to be: [query]",{"range":"230","text":"231"},{"range":"232","text":"229"},[1022,1032],"[dispatch, user.email]",[1590,1602],"[field, questionId]",[726,728],"[id]",[1592,1594],"[query]",[659,661]]