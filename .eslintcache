[{"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\index.js":"1","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\App.js":"2","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\serviceWorker.js":"3","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\app\\store.js":"4","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\firebase.js":"5","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Quora.js":"6","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\features\\userSlice.js":"7","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\auth\\Login.js":"8","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\features\\questionSlice.js":"9","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Widget.js":"10","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Feed.js":"11","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\QHeader.js":"12","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Sidebar.js":"13","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\WidgetContent.js":"14","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\QuorBox.js":"15","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Post.js":"16","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\SidebarOptions.js":"17","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Section.js":"18","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\ProjectFeed.js":"19","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\profile.js":"20"},{"size":757,"mtime":1631960553219,"results":"21","hashOfConfig":"22"},{"size":1236,"mtime":1631961813850,"results":"23","hashOfConfig":"22"},{"size":5141,"mtime":1631900790499,"results":"24","hashOfConfig":"22"},{"size":276,"mtime":1631900790462,"results":"25","hashOfConfig":"22"},{"size":1035,"mtime":1631908589316,"results":"26","hashOfConfig":"22"},{"size":658,"mtime":1631963287359,"results":"27","hashOfConfig":"22"},{"size":462,"mtime":1631900790492,"results":"28","hashOfConfig":"22"},{"size":4608,"mtime":1631963151212,"results":"29","hashOfConfig":"22"},{"size":626,"mtime":1631900790492,"results":"30","hashOfConfig":"22"},{"size":1266,"mtime":1631962492197,"results":"31","hashOfConfig":"22"},{"size":1062,"mtime":1631957709766,"results":"32","hashOfConfig":"22"},{"size":6817,"mtime":1631963724385,"results":"33","hashOfConfig":"22"},{"size":242,"mtime":1631900790482,"results":"34","hashOfConfig":"22"},{"size":566,"mtime":1631962538876,"results":"35","hashOfConfig":"22"},{"size":945,"mtime":1631963452224,"results":"36","hashOfConfig":"22"},{"size":6869,"mtime":1631942301343,"results":"37","hashOfConfig":"22"},{"size":2643,"mtime":1631900790482,"results":"38","hashOfConfig":"22"},{"size":463,"mtime":1631957743671,"results":"39","hashOfConfig":"22"},{"size":1069,"mtime":1631957483006,"results":"40","hashOfConfig":"22"},{"size":132,"mtime":1631959698454,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1h08rk",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\index.js",["87","88"],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\App.js",["89","90"],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\serviceWorker.js",[],["91","92"],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\app\\store.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\firebase.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Quora.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\features\\userSlice.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\auth\\Login.js",["93","94"],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\features\\questionSlice.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Widget.js",["95","96"],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Feed.js",["97"],"import React, { useEffect, useState } from \"react\";\r\nimport QuorBox from \"./QuorBox\";\r\nimport \"./Feed.css\";\r\nimport Post from \"./Post\";\r\nimport db from \"../firebase\";\r\n\r\nfunction Feed() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"questions\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            questions: doc.data(),\r\n          }))\r\n        )\r\n      );\r\n  }, []);\r\n\r\n  console.log(posts)\r\n  return (\r\n    <div className=\"feed\">\r\n      <QuorBox field={\"feed\"}/>\r\n      {posts.map(({ id, questions }) => (\r\n        <Post\r\n          key={id}\r\n          Id={id}\r\n          question={questions.question}\r\n          imageUrl={questions.imageUrl}\r\n          timestamp={questions.timestamp}\r\n          users={questions.user}\r\n          file={questions.file == undefined ? \"\" : questions.file.fileHolder}\r\n          upvote={questions.upvote}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\QHeader.js",["98","99","100"],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Sidebar.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\WidgetContent.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\QuorBox.js",["101"],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Post.js",["102","103","104"],"import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Post.css\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\r\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\r\nimport { MoreHorizOutlined, ShareOutlined, Update } from \"@material-ui/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport Modal from \"react-modal\";\r\nimport db from \"../firebase\";\r\nimport { selectQuestionId, setQuestionInfo } from \"../features/questionSlice\";\r\nimport firebase from \"firebase\";\r\nfunction Post({ Id, question, imageUrl, timestamp, users, file, upvote}) {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\r\n  const questionId = useSelector(selectQuestionId);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [getAnswers, setGetAnswers] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (questionId) {\r\n      db.collection(\"questions\")\r\n        .doc(questionId)\r\n        .collection(\"answer\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) =>\r\n          setGetAnswers(\r\n            snapshot.docs.map((doc) => ({ id: doc.id, answers: doc.data() }))\r\n          )\r\n        );\r\n    }\r\n  }, [questionId]);\r\n\r\n\r\n  const handleupvote = (e) => {\r\n    e.preventDefault();\r\n   \r\n    if (questionId) {\r\n      db.collection(\"questions\").doc(questionId).update({\r\n        upvote: firebase.firestore.FieldValue.arrayUnion(user)\r\n      }\r\n      )\r\n    }\r\n\r\n    // db.collection(\"questions\").doc(questionId).collection(\"upvote\").doc(user).delete({\r\n    //   user: user,\r\n    //   upvote: true,\r\n    //   questionId: questionId,\r\n    //   timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    // });\r\n\r\n    console.log(questionId);\r\n    setAnswer(\"\");\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleAnswer = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (questionId) {\r\n      db.collection(\"questions\").doc(questionId).collection(\"answer\").add({\r\n        user: user,\r\n        answer: answer,\r\n        questionId: questionId,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n    }\r\n    console.log(questionId);\r\n    setAnswer(\"\");\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"post\"\r\n      onClick={() =>\r\n        dispatch(\r\n          setQuestionInfo({\r\n            questionId: Id,\r\n            questionName: question,\r\n          })\r\n        )\r\n      }\r\n    >\r\n      <div className=\"post__info\">\r\n        <Avatar\r\n          src={\r\n            users.photo\r\n              ? users.photo\r\n              : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\r\n          }\r\n        />\r\n        <h4>{users.displayName ? users.displayName : users.email}</h4>\r\n        <small>{new Date(timestamp?.toDate()).toLocaleString()}</small>\r\n      </div>\r\n      <div className=\"post__body\">\r\n        <div className=\"post__question\">\r\n          <h3>{question}</h3>\r\n          <button\r\n            onClick={() => setIsModalOpen(true)}\r\n            className=\"post__btnAnswer\"\r\n          >\r\n            Answer\r\n          </button>\r\n          <Modal\r\n            isOpen={IsmodalOpen}\r\n            onRequestClose={() => setIsModalOpen(false)}\r\n            shouldCloseOnOverlayClick={false}\r\n            style={{\r\n              overlay: {\r\n                width: 680,\r\n                height: 550,\r\n                backgroundColor: \"rgba(0,0,0,0.8)\",\r\n                zIndex: \"1000\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                marginTop: \"-250px\",\r\n                marginLeft: \"-350px\",\r\n              },\r\n            }}\r\n          >\r\n            <div className=\"modal__question\">\r\n              <h1>{question}</h1>\r\n              <p>\r\n                asked by{\" \"}\r\n                <span className=\"name\">\r\n                  {users.displayName ? users.displayName : users.email}\r\n                </span>{\" \"}\r\n                {\"\"}\r\n                on{\" \"}\r\n                <span className=\"name\">\r\n                  {new Date(timestamp?.toDate()).toLocaleString()}\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"modal__answer\">\r\n              <textarea\r\n                value={answer}\r\n                onChange={(e) => setAnswer(e.target.value)}\r\n                placeholder=\"Enter Your Answer\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"modal__button\">\r\n              <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\r\n                Cancel\r\n              </button>\r\n              <button type=\"sumbit\" onClick={handleAnswer} className=\"add\">\r\n                Add Answer\r\n              </button>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <div><a href={file} >{ file}</a></div>\r\n        <div className=\"post__answer\">\r\n          {getAnswers.map(({ id, answers }) => (\r\n            <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" }}>\r\n              {Id === answers.questionId ? (\r\n                <span>\r\n                  {answers.answer}\r\n                  <br />\r\n                  <span\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      color: \"gray\",\r\n                      fontSize: \"small\",\r\n                      display: \"flex\",\r\n                      right: \"0px\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#b92b27\" }}>\r\n                      {answers.user.displayName\r\n                        ? answers.user.displayName\r\n                        : answers.user.email}{\" \"}\r\n                      on{\" \"}\r\n                      {new Date(answers.timestamp?.toDate()).toLocaleString()}\r\n                    </span>\r\n                  </span>\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <img src={imageUrl} alt=\"\" />\r\n      </div>\r\n      <div className=\"post__footer\">\r\n        <div className=\"post__footerAction\">\r\n          <ArrowUpwardOutlinedIcon onClick={handleupvote} />{upvote==undefined? 0: upvote.length}\r\n        </div>\r\n\r\n        <RepeatOutlinedIcon />\r\n        <ChatBubbleOutlineOutlinedIcon />\r\n        <div className=\"post__footerLeft\">\r\n          <ShareOutlined />\r\n          <MoreHorizOutlined />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\SidebarOptions.js",[],"C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\Section.js",["105","106","107","108","109"],"import React from \"react\";\r\nimport Feed from \"./Feed.js\";\r\nimport QHeader from \"./QHeader\";\r\nimport \"./Quora.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Widget from \"./Widget.js\";\r\nimport Section from \"./Section.js\";\r\n\r\nfunction Quora({setfield,field}) {\r\n  return (\r\n    <div>\r\n          <button onClick={()=>setfield(false)}>Projects</button>\r\n          <button onClick={()=>setfield(true)}>Questions</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quora;\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\ProjectFeed.js",["110"],"import React, { useEffect, useState } from \"react\";\r\nimport QuorBox from \"./QuorBox\";\r\nimport \"./Feed.css\";\r\nimport Post from \"./Post\";\r\nimport db from \"../firebase\";\r\n\r\nfunction Feed() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"questions\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            questions: doc.data(),\r\n          }))\r\n        )\r\n      );\r\n  }, []);\r\n\r\n  console.log(posts)\r\n  return (\r\n    <div className=\"feed\">\r\n          <QuorBox field={\"project\"}/>\r\n      {posts.map(({ id, questions }) => (\r\n        <Post\r\n          key={id}\r\n          Id={id}\r\n          question={questions.question}\r\n          imageUrl={questions.imageUrl}\r\n          timestamp={questions.timestamp}\r\n          users={questions.user}\r\n          file={questions.file == undefined ? \"\" : questions.file.fileHolder}\r\n          upvote={questions.upvote}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\Shubhangi\\Desktop\\devathon\\quora-clone\\src\\components\\profile.js",[],{"ruleId":"111","severity":1,"message":"112","line":5,"column":25,"nodeType":"113","messageId":"114","endLine":5,"endColumn":30},{"ruleId":"111","severity":1,"message":"115","line":5,"column":32,"nodeType":"113","messageId":"114","endLine":5,"endColumn":38},{"ruleId":"111","severity":1,"message":"116","line":9,"column":10,"nodeType":"113","messageId":"114","endLine":9,"endColumn":23},{"ruleId":"111","severity":1,"message":"115","line":9,"column":32,"nodeType":"113","messageId":"114","endLine":9,"endColumn":38},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"111","severity":1,"message":"121","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":27},{"ruleId":"111","severity":1,"message":"122","line":12,"column":9,"nodeType":"113","messageId":"114","endLine":12,"endColumn":15},{"ruleId":"111","severity":1,"message":"123","line":4,"column":14,"nodeType":"113","messageId":"114","endLine":4,"endColumn":18},{"ruleId":"111","severity":1,"message":"124","line":4,"column":20,"nodeType":"113","messageId":"114","endLine":4,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":35,"column":32,"nodeType":"127","messageId":"128","endLine":35,"endColumn":34},{"ruleId":"111","severity":1,"message":"129","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":36},{"ruleId":"111","severity":1,"message":"130","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":38},{"ruleId":"111","severity":1,"message":"131","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":24,"column":19,"nodeType":"127","messageId":"128","endLine":24,"endColumn":21},{"ruleId":"111","severity":1,"message":"132","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":33},{"ruleId":"111","severity":1,"message":"133","line":8,"column":44,"nodeType":"113","messageId":"114","endLine":8,"endColumn":50},{"ruleId":"125","severity":1,"message":"126","line":194,"column":68,"nodeType":"127","messageId":"128","endLine":194,"endColumn":70},{"ruleId":"111","severity":1,"message":"134","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":12},{"ruleId":"111","severity":1,"message":"135","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":15},{"ruleId":"111","severity":1,"message":"136","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":15},{"ruleId":"111","severity":1,"message":"137","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":14},{"ruleId":"111","severity":1,"message":"138","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":35,"column":32,"nodeType":"127","messageId":"128","endLine":35,"endColumn":34},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'BrowserRouter' is defined but never used.","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"'ArrowForwardIosIcon' is defined but never used.","'signIn' is assigned a value but never used.","'auth' is defined but never used.","'provider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FeaturedPlayListOutlinedIcon' is defined but never used.","'AssignmentTurnedInOutlinedIcon' is defined but never used.","'NotificationsOutlinedIcon' is defined but never used.","'ArrowDownwardOutlinedIcon' is defined but never used.","'Update' is defined but never used.","'Feed' is defined but never used.","'QHeader' is defined but never used.","'Sidebar' is defined but never used.","'Widget' is defined but never used.","'Section' is defined but never used.","no-global-assign","no-unsafe-negation"]